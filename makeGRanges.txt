makeGRanges <- function(path){  data <- as.data.frame(read.table(path,header = TRUE))  gr <- GRanges(seqnames = data$chr,                IRanges(start = data$pos,width = 1),                strand = data$strand)  mcols(gr) <- data[,4:ncol(data)]  return(gr)}paths <- read.csv('paths.csv')paths <- paths[paths$cell_line=='HEK293'&paths$conidtion=='WT',]names <- c()total <- c()for(i in 1:nrow(paths)){  name <- paths[i,3]  names <- append(names,name)  assign(name,makeGRanges(paths[i,4]))  tmp <- get(name)  total <- append(total,tmp)}unique <- unique(total)mcols(unique)$modification <- unique$modificationmod <- unique$modificationsoftwares <- unique(paths$software)for(software in softwares){  gr_names <- names[paths$software==software]  gr <- c()  for(gr_name in gr_names){    gr <- append(gr,get(gr_name))    print(gr_name)  }  assign(software,gr)}software_counts <- matrix(0,ncol = length(softwares),nrow = length(unique))colnames(software_counts) <- softwaresmcols(unique)$software <- '0'for(i in 1:ncol(software_counts)){  gr <- get(softwares[i])  software_counts[unique%over%gr,i] <- 1}mcols(unique) <- software_countsmcols(unique)$times <- rowSums(software_counts)mcols(unique)$modification <- modpsi_index <- which(unique$modification=='Psi'&unique$times==1)unique <- unique[-psi_index]saveRDS(unique, '/data/yuxin/Nanopore/hek293_wt.rds')write.table(as.data.frame(unique),row.names = FALSE,quote = FALSE,sep=',',            'path/hek293_wt.txt')